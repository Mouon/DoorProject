#name: Java CI/CD with Gradle
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#permissions:
#  contents: read
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Build with Gradle
#        run: ./gradlew --warning-mode all build -i
#
#
#  docker-build:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Grant execute permisson for gradlew
#        run: chmod +x gradlew
#
#      - name: Build with Gradle (without Test)
#        run: ./gradlew clean build -x test --stacktrace
#
#      - name: Docker Hub build & push
#        run: |
#          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PWD }}
#          docker build --build-arg OPEN_AI_KEY=${{ secrets.OPEN_AI_KEY }} \
#          --build-arg OPEN_API_KEY=${{ secrets.OPEN_API_KEY }} \
#          --build-arg SPRING_DATASOURCE_HOST=${{ secrets.SPRING_DATASOURCE_HOST }} \
#          --build-arg SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
#          --build-arg SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
#          -t mouon/mouonprojectx:latest .
#          docker images
#          docker push mouon/mouonprojectx:latest
#
#      - name: deploy
#        uses: appleboy/ssh-action@master
#        with:
#          username: ec2-user
#          host: ${{ secrets.WAS_HOST }}
#          key: ${{ secrets.PRIVATE_KEY }}
#          port: ${{ secrets.WAS_PORT }}
#          script: |
#            sudo docker ps
#            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO_NAME }}
#            sudo docker run -d -e SPRING_DATASOURCE_HOST=${{ secrets.SPRING_DATASOURCE_HOST }} \
#            -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
#            -e SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
#            -p 9000:9000 ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO_NAME }}
#
#            sudo docker image prune -f